AWSTemplateFormatVersion: 2010-09-09
Description: Inspector Lambda

Resources:

  InspectorRole:
    Type: AWS::IAM::Role
    Properties:
      ManagedPolicyArns: ["arn:aws:iam::aws:policy/AmazonInspectorFullAccess"]
      AssumeRolePolicyDocument:
        Statement:
        - Effect: Allow
          Principal:
            Service:
            - lambda.amazonaws.com
          Action:
          - sts:AssumeRole
      Path: /
      Policies:
      - PolicyName: inspector-policy
        PolicyDocument:
          Statement:
          - Effect: Allow
            Resource:
            - "*"
            Action:
            - inspector:StartAssessmentRun
            - inspector:Create*
            - inspector:List*
            - inspector:Delete*
            - inspector:Describe*
            - logs:*
            - ec2:CreateTag*
            - ec2:DeleteTag*
            - ec2:Read*
            - ec2:Describe*

  InspectorLambda:
    Type: "AWS::Lambda::Function"
    Properties:
      Code:
        S3Bucket: guardian-dist
        S3Key: guardian/PROD/inspector-lambda/inspector-lambda-0.5.0-SNAPSHOT.jar
      Description: "A regular rescan of a few instances for each Stack, App, Stage combination present"
      Environment:
        Variables:
          RoleArn: 
            Fn::GetAtt:
              - "InspectorServiceRole"
              - "Arn"
      FunctionName: inspectorlambda
      Handler: com.gu.inspectorlambda.Lambda::handleRequest
      Role:
        Fn::GetAtt: [ "InspectorRole", "Arn" ]
      Runtime: java8
      MemorySize: 256
      Timeout: 300

  InspectorScheduleRule:
    Type: "AWS::Events::Rule"
    Properties:
      Name: InspectionScheduler
      ScheduleExpression: cron(0 3 ? * MON,THU *)
      Targets:
        -
          Arn:
            Fn::GetAtt:
              - "InspectorLambda"
              - "Arn"
          Id: "InspectorLambda"

  InspectorLogGroup:
    Type: "AWS::Logs::LogGroup"
    Properties:
      LogGroupName: /aws/lambda/inspectorlambda
      RetentionInDays: 30

  InspectorLambdaPermission:
    Type: "AWS::Lambda::Permission"
    Properties:
      Action: lambda:InvokeFunction
      FunctionName: inspectorlambda
      Principal: events.amazonaws.com
      SourceArn:
        Fn::GetAtt: [ "InspectorScheduleRule", "Arn" ]

  InspectorServiceRole:
    Type: "AWS::IAM::Role"
    Properties:
      AssumeRolePolicyDocument:
        Statement:
        - Effect: Allow
          Principal:
            Service:
            - inspector.amazonaws.com
          Action:
          - sts:AssumeRole
      ManagedPolicyArns:
        - String
      RoleName:
        AWSServiceRoleForAmazonInspector